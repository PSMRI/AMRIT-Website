---
export const prerender = false;
import PageHeader from "@/components/PageHeader.astro";
import Base from "@/layouts/Base.astro";
import { getEntryBySlug } from "astro:content";
const entry = await getEntryBySlug("contact", "index");
const contact = entry.data;
const page_data = {
  ...contact,
  content: contact.body,
};
let message = "";
let messageType = "";
let url = ""
let data = ""
if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const response = await fetch(`${Astro.url}/api/sendEmail`, {
      method: "POST",
      body: formData,
    });

    url = `${Astro.url}/api/sendEmail`
    data = await response.text();

    const data = await response.json();
    if (response.status === 200) {
      message = data.message;
      messageType = "success"; // Success
    } else {
      message = "Something went wrong. Please try again.";
      messageType = "error"; // Failure
    }
  } catch (error) {
    if (error instanceof Error) {
      message = `Error: ${error.message}`;
      messageType = "error"; // Failure
    }
  }
}
---

<Base
  title={contact.title}
  meta_title={contact.meta_title}
  description={contact.description}
  image={contact.image}
>
  <section class="page-hero pb-6 pt-16">
    <div class="container"><PageHeader page_data={page_data} /></div>
  </section>

  <section class="section pt-0">
    <div class="container">
      <div class="row justify-center">
        <div class="md:col-6 md:order-1">
          {message && (
            <div class={`message ${messageType === 'success' ? 'success' : 'error'}`}>
              <p>{message}</p>
              <p>{url}</p>
              <p>{data}</p>
            </div>
          )}
          <form
            class="lg:max-w-[484px] mx-auto"
            method="POST"
            id="contactForm"
            onsubmit="return validateForm(event)"
          >
            <div class="form-group mb-5">
              <label class="form-label" for="name">Full Name</label>
              <input
                class="form-control"
                type="text"
                id="name"
                name="name"
                placeholder="Your Full Name"
                required
              />
              <div id="nameError" class="error-message hidden">Please enter your name.</div>
            </div>
            <div class="form-group mb-5">
              <label class="form-label" for="email">Email Address</label>
              <input
                class="form-control"
                type="email"
                id="email"
                name="email"
                placeholder="Your Email Address"
                required
              />
              <div id="emailError" class="error-message hidden">Please enter a valid email.</div>
            </div>
            <div class="form-group mb-5">
              <label class="form-label" for="message">Message</label>
              <textarea
                class="form-control h-[150px]"
                id="message"
                name="message"
                cols="30"
                rows="10"
                required
              ></textarea>
              <div id="messageError" class="error-message hidden">Please enter a message.</div>
            </div>
            <!-- Loader inside the submit button -->
            <button
              class="btn btn-primary block w-full loading-button"
              type="submit"
              id="submitButton"
            >
              <span class="btn-text">Send Message</span>
              <span class="loader hidden"></span>
            </button>
          </form>
        </div>
      </div>
    </div>
  </section>

  <script lang="ts">
    // Client-side form validation
    function validateForm(event) {
      let isValid = true;
      const name = document.getElementById('name');
      const email = document.getElementById('email');
      const message = document.getElementById('message');
      const loader = document.querySelector('.loader');
      const submitButton = document.getElementById('submitButton');
      const btnText = document.querySelector('.btn-text');

      // Reset error messages
      document.getElementById('nameError').classList.add('hidden');
      document.getElementById('emailError').classList.add('hidden');
      document.getElementById('messageError').classList.add('hidden');

      // Validate name
      if (name.value.trim() === '') {
        document.getElementById('nameError').classList.remove('hidden');
        isValid = false;
      }

      // Validate email
      const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
      if (!emailPattern.test(email.value.trim())) {
        document.getElementById('emailError').classList.remove('hidden');
        isValid = false;
      }

      // Validate message
      if (message.value.trim() === '') {
        document.getElementById('messageError').classList.remove('hidden');
        isValid = false;
      }

      // If form is valid, show loader and disable submit button
      if (isValid) {
        loader.style.display = 'inline-block';
        loader.classList.remove("hidden");
        btnText.style.display = 'none'; // Hide text on button
        submitButton.disabled = true;
      }

      return isValid; // Only submit if valid
    }
  </script>
</Base>
